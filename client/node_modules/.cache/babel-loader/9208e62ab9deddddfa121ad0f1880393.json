{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u044E\\u0437\\u0435\\u0440\\\\Downloads\\\\diplom\\\\diplom\\\\src\\\\screens\\\\library\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport APIKit from \"../../spotify\";\nimport { IconContext } from \"react-icons\";\nimport { AiFillPlayCircle } from \"react-icons/ai\";\nimport \"./library.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Library() {\n  _s();\n\n  const [playlists, setPlaylists] = useState(null);\n  useEffect(() => {\n    APIKit.get(\"me/playlists\").then(function (response) {\n      setPlaylists(response.data.items);\n    });\n  }, []);\n  const navigate = useNavigate();\n\n  const playPlaylist = id => {\n    navigate(\"/player\", {\n      state: {\n        id: id\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"library-body\",\n      children: playlists === null || playlists === void 0 ? void 0 : playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-card\",\n        onClick: () => playPlaylist(playlist.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: playlist.images[0].url,\n          className: \"playlist-image\",\n          alt: \"Playlist-Art\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"playlist-title\",\n          children: playlist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"playlist-subtitle\",\n          children: [playlist.tracks.total, \" Songs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlist-fade\",\n          children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              size: \"50px\",\n              color: \"#E99D72\"\n            },\n            children: /*#__PURE__*/_jsxDEV(AiFillPlayCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, playlist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Library, \"VmRBJ4vMnMwM/PnXyA8LXCHRAys=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Library;\n\nvar _c;\n\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"sources":["C:/Users/юзер/Downloads/diplom/diplom/src/screens/library/index.js"],"names":["React","useState","useEffect","APIKit","IconContext","AiFillPlayCircle","useNavigate","Library","playlists","setPlaylists","get","then","response","data","items","navigate","playPlaylist","id","state","map","playlist","images","url","name","tracks","total","size","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,OAAO,eAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,MAAM,CAACO,GAAP,CAAW,cAAX,EAA2BC,IAA3B,CAAgC,UAAUC,QAAV,EAAoB;AAClDH,MAAAA,YAAY,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAZ;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,YAAY,GAAIC,EAAD,IAAQ;AAC3BF,IAAAA,QAAQ,CAAC,SAAD,EAAY;AAAEG,MAAAA,KAAK,EAAE;AAAED,QAAAA,EAAE,EAAEA;AAAN;AAAT,KAAZ,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACGT,SADH,aACGA,SADH,uBACGA,SAAS,CAAEW,GAAX,CAAgBC,QAAD,iBACd;AACE,QAAA,SAAS,EAAC,eADZ;AAGE,QAAA,OAAO,EAAE,MAAMJ,YAAY,CAACI,QAAQ,CAACH,EAAV,CAH7B;AAAA,gCAKE;AACE,UAAA,GAAG,EAAEG,QAAQ,CAACC,MAAT,CAAgB,CAAhB,EAAmBC,GAD1B;AAEE,UAAA,SAAS,EAAC,gBAFZ;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,gBALF,eAUE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA,oBAA+BF,QAAQ,CAACG;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA,qBAAkCH,QAAQ,CAACI,MAAT,CAAgBC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE,QAAC,WAAD,CAAa,QAAb;AAAsB,YAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAE,MAAR;AAAgBC,cAAAA,KAAK,EAAE;AAAvB,aAA7B;AAAA,mCACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA,SAEOP,QAAQ,CAACH,EAFhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAzCuBV,O;UASLD,W;;;KATKC,O","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport APIKit from \"../../spotify\";\nimport { IconContext } from \"react-icons\";\nimport { AiFillPlayCircle } from \"react-icons/ai\";\nimport \"./library.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Library() {\n  const [playlists, setPlaylists] = useState(null);\n\n  useEffect(() => {\n    APIKit.get(\"me/playlists\").then(function (response) {\n      setPlaylists(response.data.items);\n    });\n  }, []);\n\n  const navigate = useNavigate();\n\n  const playPlaylist = (id) => {\n    navigate(\"/player\", { state: { id: id } });\n  };\n\n  return (\n    <div className=\"screen-container\">\n      <div className=\"library-body\">\n        {playlists?.map((playlist) => (\n          <div\n            className=\"playlist-card\"\n            key={playlist.id}\n            onClick={() => playPlaylist(playlist.id)}\n          >\n            <img\n              src={playlist.images[0].url}\n              className=\"playlist-image\"\n              alt=\"Playlist-Art\"\n            />\n            <p className=\"playlist-title\">{playlist.name}</p>\n            <p className=\"playlist-subtitle\">{playlist.tracks.total} Songs</p>\n            <div className=\"playlist-fade\">\n              <IconContext.Provider value={{ size: \"50px\", color: \"#E99D72\" }}>\n                <AiFillPlayCircle />\n              </IconContext.Provider>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}